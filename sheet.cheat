; pull common vars from env to set default values
;$ rhost: echo -n "$RHOST"
;$ lhost: echo -n "$LHOST"

% navi, test

# test default value
printf "%s" <rhost>
$ rhost: echo -n "$RHOST"

% autorecon

# default autorecon
sudo env "PATH=$PATH" autorecon <rhost>
$ rhost: echo -n "$RHOST"

# autorecon with named ports
sudo env "PATH=$PATH" autorecon <rhost> --ports T:<ports>
$ rhost: echo -n "$RHOST"
$ ports: 22,80,3389

% hashcat

# default hashcat
hashcat -m <hash_id> <file> <wordlist> --show
$ wordlist: /usr/share/wordlists/rockyou.txt

# hashcat with a rule
hashcat -m <hash_id> <file> <wordlist> -r <rule> --show
$ wordlist: /usr/share/wordlists/rockyou.txt
$ rule: /usr/share/hashcat/rules/rockyou-30000.rule

% nmap

# nmap
sudo nmap -p<ports> -sS -sV -sC -v -oN <rhost>.$(basename $PWD).nmap.txt <rhost>
$ rhost: echo -n "$RHOST"

# FAST: SYN scan only top 1000 ports
sudo nmap -sS --top-ports 1000 -T4 <rhost>
$ rhost: echo -n "$RHOST"

# FAST: SYN scan all ports
sudo nmap -sS -p- -T4 <rhost>
$ rhost: echo -n "$RHOST"

# nmap (vuln scripts)
sudo nmap -p<ports> -sS -sV -sC -v --script=vuln -oN <rhost>.$(basename $PWD).nmap.txt <rhost>
$ rhost: echo -n "$RHOST"

% rdp

# rdp in high definition
sudo xfreerdp /u:<username> /p:<password> /v:<rhost> /w:2560 /h:1600 /smart-sizing:2560x1600 /scale:180 /cert-ignore /compression /auto-reconnect
$ rhost: echo -n "$RHOST"

; note that Windows puts the shared drive in a weird place like \\tsclient\kali 
# rdp with a file mount
sudo xfreerdp /u:<username> /p:<password> /v:<rhost> /w:2560 /h:1600 /smart-sizing:2560x1600 /scale:180 /cert-ignore /compression /auto-reconnect /drive:<remote_dir_name>,<local_path>
$ rhost: echo -n "$RHOST"
$ remote_dir_name: kali
$ local_path: "$PWD"

% smb

# host a new smb share from $PWD
impacket-smbserver -smb2support share .

# smb login with no password
smbclient \\\\<rhost>\\<directory> -U <username>
$ rhost: echo -n "$RHOST"

# smb login with with password
smbclient \\\\<rhost>\\<directory> -U <username>%<password>
$ rhost: echo -n "$RHOST"

# smbclient put file
smbclient //"<rhost>"/<share> -c 'put <file>'
$ rhost: echo -n "$RHOST"

# smbmap
smbmap -H <rhost> -u <username> -p <password>
$ rhost: echo -n "$RHOST"

% sql

# mssql login
impacket-mssqlclient <username>:<password>@<rhost> -windows-auth
$ rhost: echo -n "$RHOST"

% tmux

# new tmux session
tmux new -s <name>

# list tmux sessions
tmux ls

# attach to a session
tmux a -t <name>

# new tmux session in different directory
tmux new -d -c <directory> -s <name>

# kill session
tmux kill-session -t <name>
